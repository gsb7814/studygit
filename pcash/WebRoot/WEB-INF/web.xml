<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
     <welcome-file>index.htm</welcome-file>
  </welcome-file-list>
  
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>
  
  <context-param>
	<param-name>webAppRootKey</param-name>
	<param-value>pcash.root</param-value>
  </context-param>
  <context-param>
	<param-name>log4jConfigLocation</param-name>
  	<param-value>classpath:log4j.properties</param-value>
  </context-param>
  <!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond-->
  <context-param>
	<param-name>log4jRefreshInterval</param-name>
	<param-value>60000</param-value>
  </context-param>


  
  
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--Spring log4j Config loader-->
  <listener>
	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>

  <filter>
    <filter-name>permissionFilter</filter-name>
    <filter-class>com.sxmccitlab.pcash.filter.PermissionFilter</filter-class>
  </filter>
 

 <filter-mapping>
    <filter-name>permissionFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
 
  
   <servlet>
    <description>the InitServlet is used to cache global data.</description>
    <display-name>This is the display name of my J2EE component</display-name>
    <servlet-name>initServlet</servlet-name>
    <servlet-class>com.sxmccitlab.pcash.servlet.InitServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>
   
  
  <filter>
  	<filter-name>lazyLoadingFilter</filter-name>
  	<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
  </filter>
  
  <filter>
  	<filter-name>struts2</filter-name>
  	<filter-class>
  		org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
  	</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>lazyLoadingFilter</filter-name>
  	<url-pattern>*.action</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping></web-app>
